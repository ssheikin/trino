name: ci

on:
  push:
    branches:
      - release-**
  pull_request:
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

env:
  # An envar that signals to tests we are executing in the CI environment
  CONTINUOUS_INTEGRATION: true
  # allow overriding Maven command
  MAVEN: ./mvnw
  # maven.wagon.rto is in millis, defaults to 30m
  MAVEN_OPTS: "-Xmx512M -XX:+ExitOnOutOfMemoryError -Dmaven.wagon.rto=60000"
  MAVEN_INSTALL_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError -Dmaven.wagon.rto=60000"
  MAVEN_FAST_INSTALL: "-B --strict-checksums -V --quiet -T C1 -DskipTests -Dair.check.skip-all"
  MAVEN_TEST: "-B --strict-checksums -Dair.check.skip-all --fail-at-end"
  RETRY: .github/bin/retry
  # Testcontainers kills image pulls if they don't make progress for > 30s and retries for 2m before failing. This means
  # that if an image doesn't download all it's layers within ~2m then any other concurrent pull will be killed because
  # the Docker daemon only downloads 3 layers concurrently which prevents the other pull from making any progress.
  # This value should be greater than the time taken for the longest image pull.
  TESTCONTAINERS_PULL_PAUSE_TIMEOUT: 600
  TEST_REPORT_RETENTION_DAYS: 5
  MAVEN_CONFIG: "-s settings.xml"

# Cancel previous PR builds.
concurrency:
  # Cancel all workflow runs except latest within a concurrency group. This is achieved by defining a concurrency group for the PR.
  # Non-PR builds have singleton concurrency groups.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  maven-checks:
    runs-on: [sep-cicd, gha-fleet-small]
    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 11
          - 17
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Maven Checks
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install -B --strict-checksums -V -T C1 -DskipTests -P ci -pl '!:trino-server-rpm'
      - name: Test Server RPM
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY bash -c "$MAVEN verify -B --strict-checksums -P ci -pl :trino-server-rpm || find core/trino-server-rpm/ -exec ls -ald {} +"
      - name: Clean Maven Output
        run: $MAVEN clean -pl '!:trino-server,!:trino-cli'
      - uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64
      - name: Test Docker Image
        run: core/docker/build-local.sh

  error-prone-checks:
    runs-on: [sep-cicd, gha-fleet-small]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -pl '!:trino-docs,!:trino-server,!:trino-server-rpm'
      - name: Error Prone Checks
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          # Run Error Prone on one module with a retry to ensure all runtime dependencies are fetched
          $RETRY $MAVEN ${MAVEN_TEST} -T C1 clean test-compile -P errorprone-compiler -pl ':trino-spi'
          # The main Error Prone run
          $MAVEN ${MAVEN_TEST} -T C1 clean test-compile -P errorprone-compiler \
            -pl '!:trino-docs,!:trino-server,!:trino-server-rpm'

  web-ui-checks:
    runs-on: [sep-cicd, gha-fleet-small]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Web UI Checks
        run: core/trino-main/bin/check_webui.sh

  test-jdbc-compatibility:
    runs-on: [sep-cicd, gha-fleet-small]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # checkout tags so version in Manifest is set properly
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -pl '!:trino-test-jdbc-compatibility-old-driver,!:trino-docs,!:trino-server,!:trino-server-rpm'
      - name: Test old JDBC vs current server
        run: testing/trino-test-jdbc-compatibility-old-driver/bin/run_tests.sh
      - name: Test current JDBC vs old server
        if: always()
        run: $MAVEN test ${MAVEN_TEST} -pl :trino-test-jdbc-compatibility-old-server
      - name: Upload test results
        uses: actions/upload-artifact@v2
        # Upload all test reports only on failure, because the artifacts are large
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/surefire-reports
            **/target/checkstyle-*
      - name: Upload test report
        uses: actions/upload-artifact@v2
        # Always upload the test report for the annotate.yml workflow,
        # but only the single XML file to keep the artifact small
        if: always()
        with:
          # Name prefix is checked in the `Annotate checks` workflow
          name: test report ${{ github.job }}
          path: |
            **/surefire-reports/TEST-*.xml
          retention-days: ${{ env.TEST_REPORT_RETENTION_DAYS }}

  hive-tests:
    runs-on: [sep-cicd, gha-fleet-medium]
    strategy:
      fail-fast: false
      matrix:
        config:
          - config-empty
          - config-hdp3
          # TODO: config-cdh5
          # TODO: config-apache-hive3
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Fetch secrets
        uses: t-botz/aws-secrets-manager-read-action@v2
        with:
          secret-id: ${{ secrets.AWS_SECRET_ARN }}
          keys-as-env-vars: true
          mask-json-values: true
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Install Hive Module
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -am -pl :trino-hive-hadoop2
      - name: Run Hive Tests
        run: |
          source plugin/trino-hive-hadoop2/conf/hive-tests-${{ matrix.config }}.sh &&
            plugin/trino-hive-hadoop2/bin/run_hive_tests.sh
      - name: Run Hive S3 Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_TESTS_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_TESTS_AWS_SECRET_KEY }}
          S3_BUCKET: "presto-hive-s3-tests"
          S3_BUCKET_ENDPOINT: "s3.us-east-2.amazonaws.com"
        run: |
          if [ "${AWS_ACCESS_KEY_ID}" != "" ]; then
            source plugin/trino-hive-hadoop2/conf/hive-tests-${{ matrix.config }}.sh &&
              plugin/trino-hive-hadoop2/bin/run_hive_s3_tests.sh
          fi
      - name: Run Hive Glue Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
        run: |
          if [ "${AWS_ACCESS_KEY_ID}" != "" ]; then
            $MAVEN test ${MAVEN_TEST} -pl :trino-hive -P test-hive-glue
          fi
      - name: Run Hive Azure ABFS Access Key Tests
        if: matrix.config != 'config-empty' # Hive 1.x does not support Azure storage
        env:
          ABFS_CONTAINER: 'container'
          ABFS_ACCOUNT: ${{ env.ABFS_TESTS_ABFS_ACCOUNT }}
          ABFS_ACCESS_KEY: ${{ env.ABFS_TESTS_ABFS_ACCESS_KEY }}
        run: |
          if [ "${ABFS_CONTAINER}" != "" ]; then
            source plugin/trino-hive-hadoop2/conf/hive-tests-${{ matrix.config }}.sh &&
              plugin/trino-hive-hadoop2/bin/run_hive_abfs_access_key_tests.sh
          fi
      - name: Run Hive Azure ABFS OAuth Tests
        if: matrix.config != 'config-empty' # Hive 1.x does not support Azure storage
        env:
          ABFS_CONTAINER: 'container'
          ABFS_ACCOUNT: ${{ env.ABFS_OAUTH_TESTS_ACCOUNT }}
          ABFS_OAUTH_ENDPOINT: ${{ env.ABFS_OAUTH_TESTS_OAUTH_ENDPOINT }}
          ABFS_OAUTH_CLIENTID: ${{ env.ABFS_OAUTH_TESTS_CLIENT_ID }}
          ABFS_OAUTH_SECRET: ${{ env.ABFS_OAUTH_TESTS_OAUTH_SECRET }}
        run: |
          if [ -n "${ABFS_OAUTH_CLIENTID}" ]; then
            source plugin/trino-hive-hadoop2/conf/hive-tests-${{ matrix.config }}.sh &&
              plugin/trino-hive-hadoop2/bin/run_hive_abfs_oauth_tests.sh
          fi
      - name: Run Hive Azure WASB Tests
        if: matrix.config != 'config-empty' # Hive 1.x does not support Azure storage
        env:
          # Use the same MS Azure storage account as for the ABFS tests
          WASB_CONTAINER: 'container'
          WASB_ACCOUNT: ${{ env.ABFS_TESTS_ABFS_ACCOUNT }}
          WASB_ACCESS_KEY: ${{ env.ABFS_TESTS_ABFS_ACCESS_KEY }}
        run: |
          if [ "${WASB_CONTAINER}" != "" ]; then
            source plugin/trino-hive-hadoop2/conf/hive-tests-${{ matrix.config }}.sh &&
              plugin/trino-hive-hadoop2/bin/run_hive_wasb_tests.sh
          fi
      - name: Run Hive Azure ADL Tests
        if: matrix.config != 'config-empty' # Hive 1.x does not support Azure storage
        env:
          ADL_NAME: ${{ env.ADL_TESTS_NAME }}
          ADL_CLIENT_ID: ${{ env.ADL_TESTS_CLIENT_ID }}
          ADL_CREDENTIAL: ${{ env.ADL_TESTS_CREDENTIAL }}
          ADL_REFRESH_URL: ${{ env.ADL_TESTS_REFRESH_URL }}
        run: |
          if [ "${ADL_NAME}" != "" ]; then
            source plugin/trino-hive-hadoop2/conf/hive-tests-${{ matrix.config }}.sh &&
              plugin/trino-hive-hadoop2/bin/run_hive_adl_tests.sh
          fi
      - name: Run Hive Alluxio Tests
        run: |
          source plugin/trino-hive-hadoop2/conf/hive-tests-${{ matrix.config }}.sh &&
            plugin/trino-hive-hadoop2/bin/run_hive_alluxio_tests.sh
      - name: Upload test results
        uses: actions/upload-artifact@v2
        # Upload all test reports only on failure, because the artifacts are large
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/surefire-reports
            **/target/checkstyle-*
      - name: Upload test report
        uses: actions/upload-artifact@v2
        # Always upload the test report for the annotate.yml workflow,
        # but only the single XML file to keep the artifact small
        if: always()
        with:
          # Name prefix is checked in the `Annotate checks` workflow
          name: test report ${{ github.job }} (${{ matrix.config }})
          path: |
            **/surefire-reports/TEST-*.xml
          retention-days: ${{ env.TEST_REPORT_RETENTION_DAYS }}

  test-other-modules:
    runs-on: [sep-cicd, gha-fleet-small]
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -pl '!:trino-docs,!:trino-server,!:trino-server-rpm'
      - name: Maven Tests
        run: |
          $MAVEN test ${MAVEN_TEST} -pl '
            !:trino-main,
            !:trino-tests,
            !:trino-raptor-legacy,
            !:trino-accumulo,
            !:trino-cassandra,
            !:trino-clickhouse,
            !:trino-hive,
            !:trino-elasticsearch,
            !:trino-mongodb,
            !:trino-kafka,
            !:trino-pinot,
            !:trino-redis,
            !:trino-mysql,
            !:trino-postgresql,
            !:trino-sqlserver,
            !:trino-oracle,
            !:trino-kudu,
            !:trino-druid,
            !:trino-iceberg,
            !:trino-phoenix,!:trino-phoenix5,
            !:trino-jdbc,!:trino-base-jdbc,!:trino-thrift,!:trino-memory,
            !:trino-docs,!:trino-server,!:trino-server-rpm,
            !:trino-test-jdbc-compatibility-old-server,
            !:trino-memsql,
            !:trino-bigquery'
      - name: Upload test results
        uses: actions/upload-artifact@v2
        # Upload all test reports only on failure, because the artifacts are large
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/surefire-reports
            **/target/checkstyle-*
      - name: Upload test report
        uses: actions/upload-artifact@v2
        # Always upload the test report for the annotate.yml workflow,
        # but only the single XML file to keep the artifact small
        if: always()
        with:
          # Name prefix is checked in the `Annotate checks` workflow
          name: test report ${{ github.job }}
          path: |
            **/surefire-reports/TEST-*.xml
          retention-days: ${{ env.TEST_REPORT_RETENTION_DAYS }}

  test:
    runs-on: ${{ matrix.runners }}
    strategy:
      fail-fast: false
      matrix:
        modules:
          - ":trino-tests"
          - ":trino-raptor-legacy"
          - ":trino-accumulo"
          - ":trino-cassandra"
          - ":trino-clickhouse"
          - ":trino-hive"
          - ":trino-hive -P test-parquet"
          - ":trino-hive -P test-failure-recovery"
          - ":trino-hive -P test-fault-tolerant-execution"
          - ":trino-elasticsearch,:trino-elasticsearch -P test-stats"
          - ":trino-mongodb"
          - ":trino-kafka"
          - ":trino-pinot"
          - ":trino-redis"
          - ":trino-mysql"
          - ":trino-postgresql"
          - ":trino-sqlserver"
          - ":trino-oracle"
          - ":trino-kudu"
          - ":trino-druid"
          - ":trino-iceberg"
          - ":trino-phoenix,:trino-phoenix5"
          - ":trino-jdbc,:trino-base-jdbc,:trino-thrift,:trino-memory"
        runners:
          - [sep-cicd, gha-fleet-small]
        include:
          - modules: ":trino-main"
            runners: [ sep-cicd, gha-fleet-large ]

    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Fetch secrets
        uses: t-botz/aws-secrets-manager-read-action@v2
        with:
          secret-id: ${{ secrets.AWS_SECRET_ARN }}
          keys-as-env-vars: true
          mask-json-values: true
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -am -pl $(echo '${{ matrix.modules }}' | cut -d' ' -f1)
      - name: Maven Tests
        run: $MAVEN test ${MAVEN_TEST} -pl ${{ matrix.modules }}
      - name: Sanitize artifact name
        if: always()
        run: |
          # Generate a valid artifact name and make it available to next steps as
          # an environment variable ARTIFACT_NAME
          # ", :, <, >, |, *, ?, \, / are not allowed in artifact names but we only use : so we remove it
          name=$(echo -n "${{ matrix.modules }}" | sed -e 's/[:]//g')
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV
      - name: Upload test results
        uses: actions/upload-artifact@v2
        # Upload all test reports only on failure, because the artifacts are large
        if: failure()
        with:
          name: result ${{ env.ARTIFACT_NAME }}
          path: |
            **/target/surefire-reports
            **/target/checkstyle-*
      - name: Upload test report
        uses: actions/upload-artifact@v2
        # Always upload the test report for the annotate.yml workflow,
        # but only the single XML file to keep the artifact small
        if: always()
        with:
          # Name prefix is checked in the `Annotate checks` workflow
          name: test report ${{ github.job }} (${{ env.ARTIFACT_NAME }})
          path: |
            **/surefire-reports/TEST-*.xml
          retention-days: ${{ env.TEST_REPORT_RETENTION_DAYS }}

  test-memsql:
    runs-on: [sep-cicd, gha-fleet-small]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Fetch secrets
        uses: t-botz/aws-secrets-manager-read-action@v2
        with:
          secret-id: ${{ secrets.AWS_SECRET_ARN }}
          keys-as-env-vars: true
          mask-json-values: true
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -am -pl :trino-memsql
      - name: Memsql Tests
        env:
          MEMSQL_LICENSE: ${{ env.MEMSQL_LICENSE }}
        run: |
          if [ "${MEMSQL_LICENSE}" != "" ]; then
            $MAVEN test ${MAVEN_TEST} -pl :trino-memsql -Dmemsql.license=${MEMSQL_LICENSE}
          fi
      - name: Upload test results
        uses: actions/upload-artifact@v2
        # Upload all test reports only on failure, because the artifacts are large
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/surefire-reports
            **/target/checkstyle-*
      - name: Upload test report
        uses: actions/upload-artifact@v2
        # Always upload the test report for the annotate.yml workflow,
        # but only the single XML file to keep the artifact small
        if: always()
        with:
          # Name prefix is checked in the `Annotate checks` workflow
          name: test report ${{ github.job }}
          path: |
            **/surefire-reports/TEST-*.xml
          retention-days: ${{ env.TEST_REPORT_RETENTION_DAYS }}

  test-bigquery:
    runs-on: [sep-cicd, gha-fleet-small]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Configure Problem Matchers
        run: |
          echo "::add-matcher::.github/problem-matcher.json"
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -am -pl :trino-bigquery
      - name: Basic BigQuery Tests
        run: $MAVEN test ${MAVEN_TEST} -pl :trino-bigquery
      - name: Cloud BigQuery Tests
        env:
          BIGQUERY_CREDENTIALS_KEY: ${{ env.BIGQUERY_CREDENTIALS_KEY }}
        run: |
          if [ "${BIGQUERY_CREDENTIALS_KEY}" != "" ]; then
            $MAVEN test ${MAVEN_TEST} -pl :trino-bigquery -Pcloud-tests -Dbigquery.credentials-key="${BIGQUERY_CREDENTIALS_KEY}"
          fi
      - name: Cloud BigQuery Case Insensitive Mapping Tests
        env:
          BIGQUERY_CREDENTIALS_KEY: ${{ env.BIGQUERY_CASE_INSENSITIVE_CREDENTIALS_KEY }}
        run: |
          if [ "${BIGQUERY_CREDENTIALS_KEY}" != "" ]; then
            $MAVEN test ${MAVEN_TEST} -pl :trino-bigquery -Pcloud-tests-case-insensitive-mapping -Dbigquery.credentials-key="${BIGQUERY_CREDENTIALS_KEY}"
          fi
      - name: Upload test results
        uses: actions/upload-artifact@v2
        # Upload all test reports only on failure, because the artifacts are large
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/surefire-reports
            **/target/checkstyle-*
      - name: Upload test report
        uses: actions/upload-artifact@v2
        # Always upload the test report for the annotate.yml workflow,
        # but only the single XML file to keep the artifact small
        if: always()
        with:
          # Name prefix is checked in the `Annotate checks` workflow
          name: test report ${{ github.job }}
          path: |
            **/surefire-reports/TEST-*.xml
          retention-days: ${{ env.TEST_REPORT_RETENTION_DAYS }}

  pt:
    runs-on: [sep-cicd, gha-fleet-small]
    # explicitly define the name to avoid adding the value of the `ignore exclusion if` matrix item
    name: pt (${{ matrix.config }}, ${{ matrix.suite }}, ${{ matrix.jdk }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - default
          - hdp3
          - cdh5
          # TODO: config-apache-hive3
        suite:
          - suite-1
          - suite-2
          - suite-3
          # suite-4 does not exist
          - suite-5
        jdk:
          - 11
        exclude:
          - config: cdh5
            ignore exclusion if: >-
              ${{ github.event_name != 'pull_request'
               || contains(github.event.pull_request.labels.*.name, 'tests:all')
               || contains(github.event.pull_request.labels.*.name, 'tests:hive')
               }}

          - config: default
            ignore exclusion if: >-
              ${{ github.event_name != 'pull_request'
               || contains(github.event.pull_request.labels.*.name, 'tests:all')
               || contains(github.event.pull_request.labels.*.name, 'tests:hive')
               }}

        ignore exclusion if:
          # Do not use this property outside of the matrix configuration.
          #
          # This is added to all matrix entries so they may be conditionally
          # excluded by adding them to the excludes list with a GHA expression
          # for this property.
          # - If the expression evaluates to true, it will never match the a
          #   actual value of the property, and will therefore not be excluded.
          # - If the expression evaluates to false, it will match the actual
          #   value of the property, and the exclusion will apply normally.
          - false
        include:
          # this suite is not meant to be run with different configs
          - config: default
            suite: suite-6-non-generic
            jdk: 11
          # this suite is not meant to be run with different configs
          - config: default
            suite: suite-7-non-generic
            jdk: 11
          # this suite is not meant to be run with different configs
          - config: default
            suite: suite-8-non-generic
            jdk: 11
          # this suite is not meant to be run with different configs
          - config: default
            suite: suite-tpcds
            jdk: 11
          # this suite is not meant to be run with different configs
          - config: default
            suite: suite-oauth2
            jdk: 11
          # this suite is not meant to be run with different configs
          - config: default
            suite: suite-ldap
            jdk: 11
          # this suite is not meant to be run with different configs
          - config: default
            suite: suite-compatibility
            jdk: 11
          # this suite is designed specifically for apache-hive3. TODO remove the suite once we can run all regular tests on apache-hive3.
          - config: apache-hive3
            suite: suite-hms-only
            jdk: 11
          # suite-1 does not contain Kerberos/encrypted Hive environments
          - config: hdp3
            suite: suite-1
            jdk: 17
          # suite-2 contains Kerberos/encrypted Hive environments
          - config: hdp3
            suite: suite-2
            jdk: 17
    # PT Launcher's timeout defaults to 2h, account for preparation steps (compilation) and add some margin
    timeout-minutes: 140
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ENGINEERING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ENGINEERING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Maven login
        run: .github/bin/maven-login.sh
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $RETRY $MAVEN install ${MAVEN_FAST_INSTALL} -pl '!:trino-docs,!:trino-server-rpm'
      - name: Product Tests
        run: |
          testing/bin/ptl suite run \
            --suite ${{ matrix.suite }} --config config-${{ matrix.config }} --bind=off --logs-dir logs/ --timeout 2h \
            --trino-jdk-version zulu_${{ matrix.jdk }}
      - name: Upload test logs and results
        uses: actions/upload-artifact@v2
        # Upload all test reports only on failure, because the artifacts are large
        if: failure()
        with:
          name: result pt (${{ matrix.config }}, ${{ matrix.suite }}, ${{ matrix.jdk }})
          path: |
            testing/trino-product-tests/target/*
            logs/*
      - name: Upload test report
        uses: actions/upload-artifact@v2
        # Always upload the test report for the annotate.yml workflow,
        # but only the single XML file to keep the artifact small
        if: always()
        with:
          # Name prefix is checked in the `Annotate checks` workflow
          name: test report pt (${{ matrix.config }}, ${{ matrix.suite }}, ${{ matrix.jdk }})
          path: testing/trino-product-tests/target/reports/**/testng-results.xml
          retention-days: ${{ env.TEST_REPORT_RETENTION_DAYS }}
